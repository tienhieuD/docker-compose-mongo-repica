version: "3"

networks:
  my_network:
    driver: bridge

  
services:
    mongo1:
        image: mongo:5
        container_name: mongo1
        networks:
          - my_network
        command: ["mongod", "--replSet", "rs0", "--bind_ip", "localhost,mongo1"]
        ports:
            - 27017:27017
        healthcheck:
            test: test $$(echo "rs.initiate({_id:'rs0',members:[{_id:0,host:\"mongo1:27017\"},{_id:1,host:\"mongo2:27017\"},{_id:2,host:\"mongo3:27017\"}]}).ok || rs.status().ok" | mongo --port 27017 --quiet) -eq 1
            interval: 10s
            start_period: 30s
        volumes:
            - './dataprod1:/data/db'
            - './scripts:/scripts'
        depends_on:
            - mongo2
            - mongo3

    mongo2:
        image: mongo:5
        container_name: mongo2
        networks:
          - my_network
        command: ["mongod", "--replSet", "rs0", "--bind_ip", "localhost,mongo2"]
        # ports:
        #     - 27018:27017
        volumes:
            - './dataprod2:/data/db'

    mongo3:
        image: mongo:5
        container_name: mongo3
        networks:
          - my_network
        command: ["mongod", "--replSet", "rs0", "--bind_ip", "localhost,mongo3"]
        # ports:
        #     - 27019:27017
        volumes:
            - './dataprod3:/data/db'

    # mongosetup:
    #     image: mongo:4.2
    #     container_name: mongodb_va
    #     networks:
    #       - my_network
    #     environment:
    #         MONGO_INITDB_ROOT_USERNAME:
    #         MONGO_INITDB_ROOT_PASSWORD:
    #         MONGO_INITDB_DATABASE: va_database
    #     depends_on:
    #         - mongo1
    #         - mongo2
    #         - mongo3
    #     volumes:
    #     - ./scripts:/scripts
    #     restart: "no"
    #     entrypoint: [ "bash", "/scripts/mongo_setup.sh"]
